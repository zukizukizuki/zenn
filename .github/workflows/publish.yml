name: Publish articles

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish_articles:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Get changed markdown files
        id: files
        run: |
          # Create an empty file first to ensure it exists even if no files match
          touch $GITHUB_WORKSPACE/changed_files.txt
          
          # Try to find changed markdown files, but don't fail if none are found
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^articles/.*\.md$" > $GITHUB_WORKSPACE/changed_files.txt || true
          
          # If running manually or if before/after SHAs aren't available, check the last commit
          if [ -z "${{ github.event.before }}" ] || [ "$(wc -l < $GITHUB_WORKSPACE/changed_files.txt)" -eq 0 ]; then
            echo "No files found in normal diff, checking last commit..."
            git diff --name-only HEAD~1 HEAD | grep "^articles/.*\.md$" > $GITHUB_WORKSPACE/changed_files.txt || true
          fi
          
          # If still no files found and this is a PR for a specific article, add it manually
          if [ "$(wc -l < $GITHUB_WORKSPACE/changed_files.txt)" -eq 0 ] && [[ "${{ github.event.pull_request.title }}" == *"#"* ]]; then
            PR_NUM=$(echo "${{ github.event.pull_request.title }}" | grep -o '#[0-9]*' | tr -d '#')
            if [ -n "$PR_NUM" ] && [ -f "articles/openhands_introduction.md" ]; then
              echo "articles/openhands_introduction.md" > $GITHUB_WORKSPACE/changed_files.txt
            fi
          fi
          
          echo "ðŸ“‹ Changed markdown files:"
          cat $GITHUB_WORKSPACE/changed_files.txt
          
          # Set output variable to indicate if we found any files
          if [ "$(wc -l < $GITHUB_WORKSPACE/changed_files.txt)" -gt 0 ]; then
            echo "found_files=true" >> $GITHUB_OUTPUT
          else
            echo "found_files=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Install qiita-cli
        if: steps.files.outputs.found_files == 'true'
        run: |
          npm install @qiita/qiita-cli --save-dev
        shell: bash

      - name: Run zenn-qiita-sync
        if: steps.files.outputs.found_files == 'true'
        uses: C-Naoki/zenn-qiita-sync@main
        with:
          qiita-token: ${{ secrets.QIITA_TOKEN }}
