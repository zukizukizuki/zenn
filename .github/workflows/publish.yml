name: Publish articles

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish_articles:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Get changed markdown files
        id: files
        run: |
          # Create an empty file first to ensure it exists even if no files match
          touch $GITHUB_WORKSPACE/changed_files.txt
          
          # 最新コミットのみで変更された記事ファイルを検出
          if [ -n "${{ github.event.before }}" ] && [ "${{ github.event.before }}" != "0000000000000000000000000000000000000000" ]; then
            # 通常のプッシュ: 前回のコミットから今回のコミットまでの差分
            git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^articles/.*\.md$" > $GITHUB_WORKSPACE/changed_files.txt || true
          else
            # 初回プッシュまたは手動実行: 最新コミットのみの変更
            git diff --name-only HEAD~1 HEAD | grep "^articles/.*\.md$" > $GITHUB_WORKSPACE/changed_files.txt || true
          fi
          
          echo "📋 Changed markdown files:"
          cat $GITHUB_WORKSPACE/changed_files.txt
          
          # 重複防止のため、ファイルの重複を除去
          sort -u $GITHUB_WORKSPACE/changed_files.txt > $GITHUB_WORKSPACE/changed_files_unique.txt
          mv $GITHUB_WORKSPACE/changed_files_unique.txt $GITHUB_WORKSPACE/changed_files.txt
          
          # Set output variable to indicate if we found any files
          if [ "$(wc -l < $GITHUB_WORKSPACE/changed_files.txt)" -gt 0 ]; then
            echo "found_files=true" >> $GITHUB_OUTPUT
          else
            echo "found_files=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Install qiita-cli
        if: steps.files.outputs.found_files == 'true'
        run: |
          npm install @qiita/qiita-cli --save-dev
        shell: bash

      - name: Run zenn-qiita-sync
        if: steps.files.outputs.found_files == 'true'
        uses: C-Naoki/zenn-qiita-sync@main
        with:
          qiita-token: ${{ secrets.QIITA_TOKEN }}
          update-existing: true
          cleanup-deleted: false
          dry-run: false
